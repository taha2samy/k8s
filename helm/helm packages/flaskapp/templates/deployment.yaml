apiVersion: apps/v1
kind: Deployment
metadata:
  name: flaskapp
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: flaskapp
  template:
    metadata:
      labels:
        app: flaskapp
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      containers:
        - name: flask
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5002
          env:
            - name: MYSQL_DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: MYSQL_DATABASE_USER
            - name: MYSQL_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: MYSQL_DATABASE_PASSWORD
            - name: MYSQL_DATABASE_DB
              valueFrom:
                secretKeyRef:
                  name: flask-secret
                  key: MYSQL_DATABASE_DB
            - name: MYSQL_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: flask-config
                  key: MYSQL_DATABASE_HOST
          {{- if .Values.probes.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readinessPath }}
              port: 5002
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.livenessPath }}
              port: 5002
            initialDelaySeconds: 15
            periodSeconds: 20
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
